<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Case_status_update_email_alert</name>
        <label>Case status update email alert</label>
        <locationX>536</locationX>
        <locationY>363</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>CaseStatusUpdatealert</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>$Record.Contact.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Case Status Updated to {!$Record.Status}</stringValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Case_Update_Email_Alert_to_Contacts</name>
        <label>Case Update Email Alert to Contacts</label>
        <locationX>739</locationX>
        <locationY>299</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Update_Case_Comment_History_Field</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>CaseUpdateEmailTemplateforContact</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>$Record.Contact.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Case Comment Updated to &quot;{!$Record.Case_Update__c}&quot;</stringValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_email_to_support_team</name>
        <label>Send email to support team</label>
        <locationX>837</locationX>
        <locationY>119</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>CaseTemplateforqueues</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>$Label.HELMS_Support_team_email_address</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>helms@ahm.honda.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Case Assigned to {!$Record.Owner:Group.Name}: {!$Record.Subject}</stringValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>53.0</apiVersion>
    <constants>
        <name>CaseCommentNullValue</name>
        <dataType>String</dataType>
    </constants>
    <decisions>
        <name>Finding_queue_s</name>
        <label>Finding queue&apos;s</label>
        <locationX>526</locationX>
        <locationY>125</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>HELMS_Tier_1_Support</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HELMS_Tier_1_Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Setup.BypassAutomations__c.BypassProcessBuilder__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_email_to_support_team</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>HELMS Tier 1 Support</label>
        </rules>
        <rules>
            <name>HELMS_Tier_2_Support</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HELMS_Tier_2_Support</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Setup.BypassAutomations__c.BypassProcessBuilder__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_email_to_support_team</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>HELMS Tier 2 Support</label>
        </rules>
        <rules>
            <name>Marine_Case_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Marine_Case_Queue</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Setup.BypassAutomations__c.BypassProcessBuilder__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_email_to_support_team</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Marine Case Queue</label>
        </rules>
        <rules>
            <name>Powersports_Case_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Powersports_Case_Queue</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Setup.BypassAutomations__c.BypassProcessBuilder__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_email_to_support_team</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>Powersports Case Queue</label>
        </rules>
        <rules>
            <name>Case_Status_Update_Alert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Setup.BypassAutomations__c.BypassProcessBuilder__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contact.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_status_update_email_alert</targetReference>
            </connector>
            <label>Case Status Update Alert</label>
        </rules>
        <rules>
            <name>Case_Update_Alert</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Case_Update__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Setup.BypassAutomations__c.BypassProcessBuilder__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Update_Email_Alert_to_Contacts</targetReference>
            </connector>
            <label>Case Update Alert</label>
        </rules>
    </decisions>
    <description>email is sent to HELMS support team  when the owner is changed to any of the queue and email is sent to the case creator on case updates as well</description>
    <environments>Default</environments>
    <formulas>
        <name>casecommenthistoryfieldupdate</name>
        <dataType>String</dataType>
        <expression>{!$Record.LastModifiedBy.FirstName}+&quot; &quot;+{!$Record.LastModifiedBy.LastName}+ &quot; &quot;+TEXT(NOW())+&quot;-&quot;+&quot; &quot;+{!$Record.Case_Update__c} +&quot; &quot;+&quot; &quot;+{!$Record.Case_Comment_History__c}</expression>
    </formulas>
    <interviewLabel>Case Email Alert for support team {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Email Alert for support team</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordUpdates>
        <name>Update_Case_Comment_Field</name>
        <label>Update Case Comment Field</label>
        <locationX>938</locationX>
        <locationY>288</locationY>
        <inputAssignments>
            <field>Case_Update__c</field>
            <value>
                <elementReference>CaseCommentNullValue</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Comment_History_Field</name>
        <label>Update Case Comment History Field</label>
        <locationX>842</locationX>
        <locationY>299</locationY>
        <connector>
            <targetReference>Update_Case_Comment_Field</targetReference>
        </connector>
        <inputAssignments>
            <field>Case_Comment_History__c</field>
            <value>
                <elementReference>casecommenthistoryfieldupdate</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Finding_queue_s</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>CaseStatusUpdatealert</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Dear {!$Record.Contact.FirstName}&lt;/p&gt;&lt;p&gt;The case number {!$Record.CaseNumber} was updated with the status as {!$Record.Status}.&lt;/p&gt;&lt;p&gt;Please log-in to the HELMS portal via iN to see more details.&lt;/p&gt;&lt;p&gt;Regards&lt;/p&gt;&lt;p&gt;HELMS Support Team&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>CaseTemplateforqueues</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;Hello,&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;A new case has been created by {!$Record.CreatedBy.FirstName} {!$Record.CreatedBy.LastName} for {!$Record.RecordType.Name}. The case has been assigned to {!$Record.Owner:Group.Name}.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;Case Summary&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;Created Date:&amp;nbsp;{!$Record.CreatedDate}&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;Division: {!$Record.Division__c}&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;Type:&amp;nbsp;{!$Record.Type}&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;Case Reason:&amp;nbsp;{!$Record.Reason}&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;Subject:&amp;nbsp;{!$Record.Subject}&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;Description:&amp;nbsp;{!$Record.Description}&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;For more details refer to Case number: {!$Record.CaseNumber}.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: white; font-family: Arial, sans-serif; color: black;&quot;&gt;This message was sent from an unmonitored email address. Please do not reply to this email.&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>CaseUpdateEmailTemplate</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;Dear {!$Record.Owner:User.FirstName},&lt;/p&gt;&lt;p&gt;The case number was updated with {!$Record.Case_Update__c}.&lt;/p&gt;&lt;p&gt;Please log-in to the HELMS portal via iN to see more details.&lt;/p&gt;&lt;p&gt;Regards&lt;/p&gt;&lt;p&gt;HELMS Support Team&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>CaseUpdateEmailTemplateforContact</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>&lt;p&gt;Dear {!$Record.Contact.FirstName},&lt;/p&gt;
&lt;p&gt;The case number {!$Record.CaseNumber} was updated with following updates.&lt;/p&gt;
&lt;p&gt;&quot;{!$Record.Case_Update__c}&quot;&lt;/p&gt;
&lt;p&gt;Please log-in to the HELMS portal via iN to see more details.&lt;/p&gt;
&lt;p&gt;Regards&lt;br&gt; HELMS Support Team&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>Subjectforthemail</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;span style=&quot;background-color: rgb(248, 248, 248); font-size: 11.36px; font-family: Arial, Helvetica, sans-serif; color: rgb(0, 0, 0);&quot;&gt;Case Assigned to {!$Record.Owner:Group.Name} - Subject: {!$Record.Subject}&lt;/span&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>CaseContactEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Record.Contact.Email</elementReference>
        </value>
    </variables>
    <variables>
        <name>CaseOwnerEmail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Record.Owner:Group.Email</elementReference>
        </value>
    </variables>
</Flow>
